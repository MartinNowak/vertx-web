# https://swagger.io/docs/specification/using-ref/
openapi: 3.0.0
info:
  version: 1.0.0
  title: JSON Schemas test spec
  license:
    name: MIT
paths:
  /test1:
    get:
      operationId: test1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        default:
          description: "OK"
  /test2:
    get:
      operationId: test2
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Person'
                - $ref: '#/components/schemas/Citizen'
  /test3:
    get:
      operationId: test3
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonComplex'
  /test4:
    get:
      operationId: test4
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/paths/~1test1/get/requestBody/content/application~1json/schema'
                - $ref: '#/components/schemas/Citizen'
  /test5:
    get:
      operationId: test5
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'http://localhost:8081/geo.json'
  /test6:
    get:
      operationId: test6
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: 'http://localhost:8081/card.json'
                - type: object
                  properties:
                    id_card:
                      type: string
                  required:
                    - id_card
  /test7:
    get:
      operationId: test7
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRecursive'
  /test8:
    get:
      operationId: test8
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
                parent:
                  $ref: '#/paths/~1test8/get/requestBody/content/application~1json/schema'
                children:
                  type: array
                  items:
                    $ref: '#/paths/~1test8/get/requestBody/content/application~1json/schema' # Self refs!
              additionalProperties: {}
  /test9:
    get:
      operationId: test9
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: 'http://localhost:8081/card.json'
                - $ref: './src/test/resources/swaggers/schemas/Card_id.yaml'
                - type: object
                  properties:
                    parent_card:
                      $ref: '#/paths/~1test9/get/requestBody/content/application~1json/schema'
                    children_cards:
                      type: array
                      items:
                        $ref: '#/paths/~1test9/get/requestBody/content/application~1json/schema'
  /test10:
    get:
      operationId: test10
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'http://localhost:8081/tree.yaml#/tree'
  /test11:
    get:
      operationId: test11
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: './src/test/resources/swaggers/schemas/tree.yaml#/tree'
  /test12:
    get:
      operationId: test12
      responses:
        default:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemaA'

components:
  schemas:
    Person:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
      required:
        - name
        - surname
    Citizen:
      type: object
      properties:
        id_card:
          type: string
      required:
        - id_card
    PersonComplex:
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/Citizen'
    PersonRecursive:
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/Citizen'
        - type: object
          properties:
            mother:
              $ref: '#/components/schemas/PersonRecursive'
            father:
              $ref: '#/components/schemas/PersonRecursive'
    schemaA:
      title: schemaA
      type: object
      properties:
        a:
          $ref: '#/components/schemas/schemaB'
        b:
          type: string
        c:
          type: number
    schemaB:
      title: schemaB
      type: object
      properties:
        a:
          type: array
          items:
            $ref: '#/components/schemas/schemaA'
